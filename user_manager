import com.collibra.dgc.core.api.model.ResourceType
import com.collibra.dgc.core.api.dto.user.FindUsersRequest
import com.collibra.dgc.core.api.dto.instance.responsibility.FindResponsibilitiesRequest

// 1. Récupérer l'identifiant de l'utilisateur initiateur
def initiatorUserName = initiator
def user = userApi.findUsers(FindUsersRequest.builder()
                             .name(initiatorUserName).build()).getResults().first()
def startUserEmail = user.getEmailAddress()
execution.setVariable("startUserEmail", startUserEmail)
execution.setVariable("initiatorUserName", initiatorUserName)

// 2. Identifier les Data Owner Bis
def rolesIdDO = [string2Uuid(dataOwnerBisUuid)]
def findResponsibilitiesRequestDO = FindResponsibilitiesRequest.builder()
    .roleIds(rolesIdDO)
    .resourceIds([relatedAssetId])
    .build()

def ownerListDO = responsibilityApi.findResponsibilities(findResponsibilitiesRequestDO).getResults()*.getOwner()
def DataOwnerBis = []

ownerListDO.each { currentItem ->
    if (currentItem.getResourceType() == ResourceType.UserGroup) {
        DataOwnerBis.add("group(${userGroupApi.getUserGroup(currentItem.getId()).getUserName()})")
    } else {
        DataOwnerBis.add("user(${userApi.getUser(currentItem.getId()).getUserName()})")
    }
}
execution.setVariable("DataOwnerBis", utility.toCsv(DataOwnerBis))

def username_DO = DataOwnerBis[0].replaceAll(/user\\(|\\)/, "")
def user_DO = userApi.findUsers(FindUsersRequest.builder()
                             .name(username_DO).build()).getResults().first()
def DataOwnerBisEmail = user_DO.getEmailAddress()
execution.setVariable("DataOwnerBisEmail", DataOwnerBisEmail)

// 3. Identifier les Data Steward Bis
def rolesIdDS = [string2Uuid(dataStewardBisUuid)]
def findResponsibilitiesRequestDS = FindResponsibilitiesRequest.builder()
    .roleIds(rolesIdDS)
    .resourceIds([relatedAssetId])
    .build()

def ownerListDS = responsibilityApi.findResponsibilities(findResponsibilitiesRequestDS).getResults()*.getOwner()
def DataStewardBis = []

ownerListDS.each { currentItem ->
    if (currentItem.getResourceType() == ResourceType.UserGroup) {
        DataStewardBis.add("group(${userGroupApi.getUserGroup(currentItem.getId()).getUserName()})")
    } else {
        DataStewardBis.add("user(${userApi.getUser(currentItem.getId()).getUserName()})")
    }
}
execution.setVariable("DataStewardBis", utility.toCsv(DataStewardBis))

def username_DS = DataStewardBis[0].replaceAll(/user\\(|\\)/, "")
def user_DS = userApi.findUsers(FindUsersRequest.builder()
                             .name(username_DS).build()).getResults().first()
def DataStewardBisEmail = user_DS.getEmailAddress()
execution.setVariable("DataStewardBisEmail", DataStewardBisEmail)
